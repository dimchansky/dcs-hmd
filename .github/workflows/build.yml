name: Build
on:
  pull_request:
  push:
    branches:
      - '**'
    tags:
      - 'v*'

jobs:

  # Build and test

  build-test-on-windows:
    runs-on: windows-latest
    steps:
      - name: Set current date and time in UTC
        run: |
          echo "BUILD_START_TIME=$(Get-Date -Format "o")" | Out-File -FilePath $env:GITHUB_ENV -Append
        shell: pwsh

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.x
          check-latest: true
          cache: true
          cache-dependency-path: |
            **/go.sum
            **/go.mod

      - name: Test
        run: |
          make test              

      - name: Build
        env:
          VERSION: ${{ github.ref_name }}
          COMMIT: ${{ github.sha }}
          BUILD_TIME: ${{ env.BUILD_START_TIME }}
        run: |
          make build

      - name: Rename README.md to README.txt
        run: move README.md README.txt
        shell: cmd

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
            path: |
              ./bin/*
              ./README.txt
            name: artifacts-windows
            if-no-files-found: error
            retention-days: 7

  release:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs:
      - build-test-on-windows

    runs-on: ubuntu-latest
    steps:
      - name: Download windows artifact
        uses: actions/download-artifact@v3
        with:
          name: artifacts-windows
          path: artifacts

      - name: Zip downloaded artifact
        run: |
          cd artifacts
          zip -r ../dcs-hmd-windows-amd64.zip .

      - name: Build changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: true
          prerelease: false
          body: |
            # Release Notes
            
            ## Features
            
            - Add foo support #issue-ref
            - Add bar support #issue-ref
            
            ## Bug fixes
            
            - Fixed foo #issue-ref
            - Fixed bar #issue-ref #pr-ref
            
            ## Breaking Changes
            
            - Foo ...
            - Bar ...
            
            ## Changes since `${{ steps.build_changelog.outputs.fromTag }}`
            
            ${{ steps.build_changelog.outputs.changelog }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dcs-hmd-windows-amd64.zip
          asset_name: dcs-hmd-${{ github.ref_name }}.zip
          asset_content_type: application/zip
